<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sm24soft</groupId>
		<artifactId>sm24soft</artifactId>
		<version>0.1.0</version>
	</parent>
	<groupId>com.sm24soft</groupId>
	<artifactId>sm24soft-webapp</artifactId>
	<packaging>war</packaging>
	<name>Sm24soft :: Sales Management Webapp</name>
	<url>http://maven.apache.org</url>
	
	<dependencies>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.sm24soft</groupId>
			<artifactId>sm24soft-core</artifactId>
			<version>0.1.0</version>
		</dependency>
		
		<dependency>
			<groupId>com.sm24soft</groupId>
			<artifactId>sm24soft-security-web</artifactId>
			<version>0.1.0</version>
		</dependency>
		
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		
		<!-- Spring AOP (Aspect-oriented programming) framework is used to modularize cross-cutting concerns in aspects. 
			 Put it simple, it’s just an interceptor to intercept some processes, for example, when a method is execute, 
			 Spring AOP can hijack the executing method, and add extra functionality before or after the method execution. -->
		
		<!-- In Spring AOP, 4 type of advices are supported : -->
		
		<!-- 		Before advice – Run before the method execution -->
		<!-- 		After returning advice – Run after the method returns a result -->
		<!-- 		After throwing advice – Run after the method throws an exception -->
		<!-- 		Around advice – Run around the method execution, combine all three advices above. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		
		<!-- Spring Security 3.x -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
		</dependency>
		
		<!-- EHCache -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.0</version>
		</dependency>
		
		<!-- SLF4J Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
		</dependency>
		
		<!-- For details http://brettwooldridge.github.io/HikariCP/ -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP-java6</artifactId>
			<version>2.3.8</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- MySQL http://mvnrepository.com/artifact/mysql/mysql-connector-java/5.1.34 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
		</dependency>
		
		<!-- Compression HttpResponse -->
		<dependency>
			<groupId>net.sourceforge.pjl-comp-filter</groupId>
			<artifactId>pjl-comp-filter</artifactId>
			<version>1.7</version>
		</dependency>
		
		<!-- Spring MyBatis Intergration -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.3.0</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>sm24soft-webapp</finalName>
	</build>
	
	<profiles>
		<profile>
			<!-- How to run: mvn -Dmaven.tomcat.uriEncoding=UTF-8 -Prun-tomcat7 -->
			<id>run-tomcat7</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<port>8080</port>
							<path>/sm24soft</path>
							<charset>UTF-8</charset>
							<uriEncoding>UTF-8</uriEncoding>
							<server>tomcat7</server>
						</configuration>
						<executions>
							<execution>
								<id>shutdown</id>
								<phase>compile</phase>
								<goals>
									<goal>shutdown</goal>
								</goals>
							</execution>
							<execution>
								<id>run</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-env-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>false</overwrite>
									<resources>
										<resource>
											<directory>${basedir}/src/main/resources</directory>
										</resource>
										<resource>
											<directory>${basedir}/src/test/resources</directory>
										</resource>
									</resources>
									<outputDirectory>${basedir}/target/classes</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<version>0.1.0</version>
</project>
